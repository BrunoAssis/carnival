- special_scope =  params[:special_scope]
- model = @model
- presenter = @presenter
- params = {:class => 'table'}

- if special_scope.present?
  - params["data-special_scope"] = special_scope


- if presenter.has_batch_actions?
  .batch-operations
    - batch_operation_actions = []
    - presenter.batch_actions.each do |key, item|
      - batch_operation_actions.push([item.to_label, item.path(presenter)]);
    = select_tag :batch_actions_select, options_for_select(batch_operation_actions), :prompt => I18n.t('batch_actions')
  :javascript
    $(document).ready(function(){
      Carnival.batchActionSelected();
      $('#batch_actions_select').change(function(){
        if($('#batch_actions_select').val()){
          Carnival.remoteFunction($('#batch_actions_select').val(), 'Carnival.batchActionSuccessCallback', 'Carnival.batchActionErrorCallback', 'POST', {batch_action_items: Carnival.batch_action_items})
        }
      });
    });


.carnival-index-form
  = form_tag(presenter.model_path(:index), method: 'get') do
    - @query_form.instance_variables.each do |variable|
      - variable_name = variable.to_s.gsub '@', ''
      = hidden_field_tag(variable_name, @query_form.send(variable_name) )

.table-tools
  .advanced_search
    = render '/carnival/shared/advanced_search', :params => params, presenter: presenter
  = render '/carnival/shared/scope', :params => params, presenter: presenter, selected_scope: @query_form.scope, scopes_total: @query_service.scopes_number
  .actions
    - presenter.actions_for_page.each do |key, action|
      = render '/carnival/shared/action_default', :label=>t("#{presenter.model_name}.#{action.name}", default: t("carnival.#{action.name}")), :path=> action.path(presenter)
  = render '/carnival/shared/period_filter', :params => params, presenter: presenter, date_period_label: @query_form.date_period_label

%table{params}
  %thead
    %tr
      -if presenter.has_batch_actions?
        %th
          %input{id: 'toggle-all-batch-actions-items',type: 'checkbox',disabled: 'disabled'}
      - @thead_renderer.columns.each do |column|
        %th{"onclick" => "javascript:#{column[:sort_function]}",  "class" => "#{column[:class]}"}= translate_field(presenter, column[:field])
      %th.buttons
  %tbody
    - @records.each do |record|
      %tr
        - if @presenter.has_batch_actions?
          %td
            =check_box_tag(:batch_action_item, record.id, false, class: 'batch_action_items')
        - @presenter.fields_for_action(:index).each do |key, field|
          = list_cel(@presenter, key,record, false).html_safe
        %td
          = list_buttons(@presenter, record).html_safe

.table-tools
  .table-download-links
    = link_to t('download_as_csv'), "javascript:exportTable('csv');"  if presenter.has_action?(:csv)
    = link_to t('download_as_pdf'), presenter.model_path(:index, {:format => 'pdf'}) if presenter.has_action?(:pdf)

  .table-paginate
    - @paginator.pages.each do |page_hash|
      %span{class: page_hash[:css_class]}
        = link_to(t(page_hash[:label]), page_hash[:js_function])
    = "#{t('paginate_total')}: #{@query_service.total_records}"

