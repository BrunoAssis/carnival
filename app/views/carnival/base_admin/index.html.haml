- special_scope =  params[:special_scope]
- presenter = @presenter
- params = {:class => "carnival-#{presenter.index_as}"}

- if special_scope.present?
  - params["data-special_scope"] = special_scope


- if presenter.has_batch_actions?
  .batch-operations
    - batch_operation_actions = []
    - presenter.batch_actions.each do |key, item|
      %span= link_to item.to_label, item.path(presenter), :class => "batch_action_button", remote: true, data: {'carnival-show-overlay' => true}
  :javascript
    $(document).ready(function(){
      Carnival.batchActionInitialize("#{t('select_one_item')}");
    });

.carnival-linsting-tools
  .carnival-index-form
    = form_tag('', method: 'get') do
      - @query_form.instance_variables.each do |variable|
        - next if variable.to_s == '@advanced_search'
        - variable_name = variable.to_s.gsub '@', ''
        = hidden_field_tag(variable_name, @query_form.send(variable_name) )

      .advanced-search
        - advanced_search_params = {}
        - if presenter.advanced_search_fields.size > 0
          = render '/carnival/shared/advanced_search', :params => @query_form.advanced_search, presenter: presenter

  .actions
    - presenter.actions_for_page.each do |key, action|
      = render '/carnival/shared/action_default', :label=>t("#{presenter.model_name}.#{action.name}", default: t("carnival.#{action.name}")), :path=> action.path(presenter)
  = render '/carnival/shared/period_filter', :params => params, presenter: presenter, date_period_label: @query_form.date_period_label
  = render '/carnival/shared/scope', :params => params, presenter: presenter, selected_scope: @query_form.scope, scopes_total: @query_service.scopes_number

  - unless presenter.index_as_table?
    .sorter
      .label
        =t("sort_by")
      .select-container
        %select{"onchange" => "javascript:Carnival.sortIndexList(this)"}
          - @thead_renderer.columns.each do |column|
            - if column[:sort_function] != ''
              %option{ :selected => column[:name] == @query_form.sort_column && 'asc' == @query_form.sort_direction, :data => {column_name: "#{column[:name]}", sort_dir: "asc"} ,  "class" => "#{column[:class]}"}= "#{translate_field(presenter, column[:field])} - &#9650;".html_safe
              %option{ :selected => column[:name] == @query_form.sort_column && 'desc' == @query_form.sort_direction, :data => {column_name: "#{column[:name]}", sort_dir: "desc"} ,  "class" => "#{column[:class]}"}= "#{translate_field(presenter, column[:field])} - &#9660;".html_safe

- if @records.any?

  = render "index_as_#{presenter.index_as}", :params => params, presenter: presenter

  .carnival-footer-tools

    .table-paginate
      - @paginator.pages.each do |page_hash|
        %span{class: page_hash[:css_class]}
          = link_to(t(page_hash[:label]), page_hash[:js_function], :class => "carnival-action-button")
      = "#{t('paginate_total')}: #{@query_service.total_records}"

    .table-download-links
      - params = @query_form.to_hash
      = link_to t('download_as_csv'), presenter.model_path(:index, {:format => 'csv'}.merge(params)), :class => "carnival-action-button pdf" if presenter.has_action?(:csv)
      = link_to t('download_as_pdf'), presenter.model_path(:index, {:format => 'pdf'}.merge(params)), :class => "carnival-action-button csv" if presenter.has_action?(:pdf)

- else
  .empty-result
    %h1
      = t('no_results')
    %h4
      %span
      - presenter.actions_for_page.each do |key, action|
        = render '/carnival/shared/action_default', :label=>t("#{presenter.model_name}.#{action.name}", default: t("carnival.#{action.name}")), :path=> action.path(presenter)
